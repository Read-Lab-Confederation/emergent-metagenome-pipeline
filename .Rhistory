dfSel<-df[(nchar(df$date) > 6),]
View(df)
rm(list=ls())
setwd('/home/ubuntu/strain/ncov/data/patient288/references')
filesList<-list.files(pattern = '.tsv')
for ( i in filesList) {
df<-read.delim(i, T, sep = '\t')
dfSel<-df[(nchar(df$date) > 6),]
for (j in 1:nrow(dfSel)) {
if ((dfSel$location[j] == '') | (dfSel$location[j] == ' ') | (is.na(dfSel$location[j]))) {
dfSel$location[j] = dfSel$division[j]
}
}
write.table(dfSel, i, row.names = F, col.names = T, quote = F, sep = '\t')
}
setwd('/home/ubuntu/nextstrain/ncov/')
rm(list=ls())
setwd('/home/ubuntu/extraVol/metagenClass/Dengue_virus/2022-10-06')
library(readr)
sumDat<-read.table('./testReads/confirmedReads.list', T)
samples<-unique(sumDat$Sample.x)
#i<-'B2E22-037A_S2_L001'
#df<-files.list[1]
selectTop<-function(x){
allRes<-data.frame(matrix(ncol=0, nrow = 0))
for ( i in samples){
targPath<-paste0('./process/', i, '/virReadsFiltLen/')
files.list<-list.files(targPath, pattern = '.par')
for (df in files.list){
dfPath<-paste0(targPath, df)
blastRes<-read_delim(dfPath, delim = "\t", escape_double = FALSE, col_names = FALSE, comment = "#", trim_ws = TRUE, col_types = cols())
if (nrow(blastRes) > 0) {
blastTop<-head(blastRes, x)
blastTop$Sample<-i
allRes<-rbind(allRes, blastTop)
}
}
}
return(allRes)
}
topNumbers<-c(1)
for (topResult in topNumbers){
allRes<-selectTop(x=topResult)
blastNames<-c('qseqid', 'sseqid', 'stitle', 'pident', 'length', 'mismatch',
'gapopen' , 'qstart' , 'qend', 'sstart' , 'send', 'evalue', 'bitscore')
colnames(allRes)[1:13]<-blastNames
allRes$Organism<-stringr::word(allRes$stitle, 1,2, sep=" ")
allResSel<-allRes[, c('Sample', 'qseqid', 'stitle')]
allResSel$read_sample<-paste(allResSel$qseqid, allResSel$Sample, sep = '_')
sumDat$read_sample<-paste(sumDat$Read, sumDat$Sample.x, sep = '_')
combReads<-plyr::join(allResSel, sumDat, by='read_sample', type='left', match='all')
combReadsSel<-combReads[, c('Sample', 'Read', 'stitle', 'Virus')]
for (i in 1:nrow(combReadsSel)){
combReadsSel$Match[i]<-grepl(combReadsSel$Virus[i], combReadsSel$stitle[i], ignore.case = T)
}
curPath<-getwd()
curDir<-sub(".*\\/", "", curPath)
dir.create('./topMatch')
# filter matched
confReads<-combReadsSel[(combReadsSel$Match==TRUE),]
confReadsSel<-unique(confReads[, c('Sample', 'Read', 'Virus')])
()
topNumbers<-c(1)
library(readr)
sumDat<-read.table('./testReads/confirmedReads.list', T)
samples<-unique(sumDat$Sample.x)
#i<-'B2E22-037A_S2_L001'
#df<-files.list[1]
selectTop<-function(x){
allRes<-data.frame(matrix(ncol=0, nrow = 0))
for ( i in samples){
targPath<-paste0('./process/', i, '/virReadsFiltLen/')
files.list<-list.files(targPath, pattern = '.par')
for (df in files.list){
dfPath<-paste0(targPath, df)
blastRes<-read_delim(dfPath, delim = "\t", escape_double = FALSE, col_names = FALSE, comment = "#", trim_ws = TRUE, col_types = cols())
if (nrow(blastRes) > 0) {
blastTop<-head(blastRes, x)
blastTop$Sample<-i
allRes<-rbind(allRes, blastTop)
}
}
}
return(allRes)
}
curPath<-getwd()
curDir<-sub(".*\\/", "", curPath)
outPath<-paste0('topMatch/', curDir,  '_krakBlastMatchLenFiltTop_', topResult, '.csv')
topResult=1
outPath<-paste0('topMatch/', curDir,  '_krakBlastMatchLenFiltTop_', topResult, '.csv')
sumPath<-paste0('topMatch/', curDir,  '_krakBlastMatchLenFilt_Sum_Top_', topResult, '.csv')
s3Path<-paste0('s3://transfer-files-emory/metagenClass/Dengue/', curDir, '/custom_output/topMatch/')
s3CommandSum<-paste0('aws s3 cp ', sumPath, ' ', s3Path)
s3CommandTab<-paste0('aws s3 cp ', outPath, ' ', s3Path)
system(s3CommandSum)
rm(list=ls())
blastKrakenConfirmedReadsTarget <- read.csv("~/extraVol/metagenClass/Dengue_virus/2022-10-06/blastKrakenConfirmedReadsTarget.csv")
View(blastKrakenConfirmedReadsTarget)
setwd('/home/ubuntu/nextstrain/ncov/my_profiles/patient288')
setwd('/home/ubuntu/extraVol/metagenClass/Dengue_virus/Batch_2')
rm(list=ls())
32/4
pwd
setwd('/home/ubuntu/strain/ncov')
georgia_2021.03.01_2022.06.23 <- read.delim("~/strain/ncov/data/georgia_2021-03-01_2022-06-23.tsv")
View(georgia_2021.03.01_2022.06.23)
nrow(georgia_2021.03.01_2022.06.23)
hcov_ay119_usa_collect_2021.10.09.2021.11.01_metadata <- read.delim("~/strain/data/hcov_ay119_usa_collect_2021-10-09-2021-11-01_metadata.tsv")
View(hcov_ay119_usa_collect_2021.10.09.2021.11.01_metadata)
rm(list=ls())
setwd('galardini2020_metadata.xlsx')
setwd('/home/ubuntu/extraVol/GWAS/subsamp_galadrini')
library(readxl)
metadata<-read_excel('/home/ubuntu/extraVol/GWAS/data/galardini2020/galardini2020_metadata.xlsx')
View(metadata)
meta_ecol<-metadata[(metadata$Species == 'E.coli'),]
unique(metadata$Species)
meta_ecol<-metadata[(metadata$Species == 'E. coli'),]
genomes_list<-list.files('/home/ubuntu/extraVol/GWAS/data/galardini2020/genomes', pattern = '.fasta')
samples_list<-gsub('.fasta', '', genomes_list)
present_samples<-meta_ecol[(meta_ecol$`Strain ID`%in%samples_list),]
View(present_samples)
View(meta_ecol)
samples_list
View(present_samples)
meta_ecol$`Strain ID`<-gsub('ECOR', 'ECOR-', meta_ecol$`Strain ID`)
genomes_list<-list.files('/home/ubuntu/extraVol/GWAS/data/galardini2020/genomes', pattern = '.fasta')
samples_list<-gsub('.fasta', '', genomes_list)
present_samples<-meta_ecol[(meta_ecol$`Strain ID`%in%samples_list),]
View(present_samples)
View(meta_ecol)
presnt_genomes<-paste0(present_samples, '.fasta')
present_samples<-data.frame(meta_ecol[(meta_ecol$`Strain ID`%in%samples_list),]) # some ecor samples were skipped due to inconsistent labeling
View(present_samples)
presnt_genomes<-paste0(present_samples$Strain.ID, '.fasta')
for ( i in present_genomes){
inPath<-paste0('../data/galardini2020/genomes/', i)
outPath<-paste0('./fasta/', i)
syscom<-paste0('cp ', inPath, ' ', outPath)
system(syscom)
}
present_genomes<-paste0(present_samples$Strain.ID, '.fasta')
for ( i in present_genomes){
inPath<-paste0('../data/galardini2020/genomes/', i)
outPath<-paste0('./fasta/', i)
syscom<-paste0('cp ', inPath, ' ', outPath)
system(syscom)
}
present_genomes<-present_genomes[1:100]
present_genomes<-present_genomes[1:100]
for ( i in present_genomes){
inPath<-paste0('../data/galardini2020/genomes/', i)
outPath<-paste0('./fasta/', i)
syscom<-paste0('cp ', inPath, ' ', outPath)
system(syscom)
}
for ( i in present_genomes){
inPath<-paste0('../data/galardini2020/genomes/', i)
newName<-gsub('.fasta', '.fna', i)
outPath<-paste0('./fasta/', newName)
syscom<-paste0('cp ', inPath, ' ', outPath)
system(syscom)
}
finalSamp<-gsub('.fasta', '', present_genomes)
runMeta<-meta_ecol[(meta_ecol$`Strain ID`%in%finalSamp),]
View(runMeta)
colnames(runMeta)
pheno<-runMeta[, c('Strain ID', 'Number of killed mice over 105')]
colnames(pheno)<-c('samples', 'mice_killed')
pheno$mice_killed<-gsub('+', '', pheno$mice_killed)
View(pheno)
pheno$mice_killed<-gsub('+', '', pheno$mice_killed)
View(pheno)
unique(pheno$mice_killed)
pheno$mice_killed<-gsub('+', '', pheno$mice_killed)
View(pheno)
pheno$mice_killed<-gsub('\\+', '', pheno$mice_killed)
View(pheno)
unique(is.numeric(pheno$mice_killed))
is.numeric(pheno$mice_killed)
View(pheno)
pheno$mice_killed<-as.numeric(as.character(pheno$mice_killed))
View(pheno)
is.na(pheno$mice_killed)
unique(is.na(pheno$mice_killed))
unique(is.numeric(pheno$mice_killed))
is.numeric(pheno$mice_killed)
unique(is.na(pheno$mice_killed))
View(pheno)
write.table(pheno, 'pheno.tsv', row.names = F, col.names = T, quote = F)
rm(list=ls())
100/4
setwd('/home/ubuntu/extraVol/metagenClass/Dengue_virus/Batch_2/process/Col-DENV-019S_S11_L001')
virusList<-read.table('../../virus.list', F, sep='\t')
df<-read.delim('krakUniq_sample.report', comment.char="#")
View(df)
View(df)
virus<-as.data.frame(df[grep(paste(vir.list,collapse="|"), df$taxName, ignore.case=T),])
virusList<-read.table('../../virus.list', F, sep='\t')
virus.list<-virusList$V1
df<-read.delim('krakUniq_sample.report', comment.char="#")
virus<-as.data.frame(df[grep(paste(vir.list,collapse="|"), df$taxName, ignore.case=T),])
virus<-as.data.frame(df[grep(paste(virus.list,collapse="|"), df$taxName, ignore.case=T),])
View(virus)
virusID<-data.frame(virus$taxID)
colnames(virusID)<-'ID'
virusTable<-rbind(virusTable,virusID)
virusTable<-data.frame(matrix(ncol=0, nrow=0))
virusID<-data.frame(virus$taxID)
colnames(virusID)<-'ID'
virusTable<-rbind(virusTable,virusID)
View(virusTable)
View(virusTable)
virusID<-data.frame(unique(virus$taxID))
colnames(virusID)<-'ID'
View(virusID)
virusTable<-data.frame(matrix(ncol=0, nrow=0))
# for each kraken sample file extract rows with matching viruses
sumVirus<-data.frame(matrix(ncol=0, nrow=0))
df<-read.delim('krakUniq_sample.report', comment.char="#")
virus<-as.data.frame(df[grep(paste(virus.list,collapse="|"), df$taxName, ignore.case=T),])
virusID<-data.frame(virus$taxID)
colnames(virusID)<-'ID'
virusTable<-rbind(virusTable,virusID)
View(virusTable)
virus<-as.data.frame(df[grep(paste('virus.list',collapse="|"), df$taxName, ignore.case=T),])
View(virus)
df<-read.delim('krakUniq_sample.report', comment.char="#")
virus<-as.data.frame(df[grep(paste(virus.list,collapse="|"), df$taxName, ignore.case=T),])
virusID<-data.frame(unique(virus$taxID))
colnames(virusID)<-'ID'
View(virus)
# read list of target viruses
virusList<-read.table('../../virus.list', F, sep='\t')
virus.list<-virusList$V1
virusId<-function(){
# for each kraken sample file extract rows with matching viruses
df<-read.delim('krakUniq_sample.report', comment.char="#")
virus<-as.data.frame(df[grep(paste(virus.list,collapse="|"), df$taxName, ignore.case=T),])
virusID<-data.frame(unique(virus$taxID))
colnames(virusID)<-'ID'
return(virusID)
}
idList<-virusId()
rm(list=ls())
# read list of target viruses
virusList<-read.table('../../virus.list', F, sep='\t')
virus.list<-virusList$V1
virusId<-function(){
# for each kraken sample file extract rows with matching viruses
df<-read.delim('krakUniq_sample.report', comment.char="#")
virus<-as.data.frame(df[grep(paste(virus.list,collapse="|"), df$taxName, ignore.case=T),])
virusID<-data.frame(unique(virus$taxID))
colnames(virusID)<-'ID'
return(virusID)
}
idList<-virusId()
View(idList)
readNameTab<-read.delim('krakUniq_sample.kraken', F, sep = '\t')
View(readNameTab)
df<-read.delim('krakUniq_sample.report', comment.char="#")
virus<-as.data.frame(df[grep(paste(virus.list,collapse="|"), df$taxName, ignore.case=T),])
virusID<-data.frame(unique(virus$taxID))
colnames(virusID)<-'ID'
View(virus)
View(virus)
virus.list
i="dengue virus"
virus$VirName<-NA
virus$VirName[grepl(i, virus$taxName)]<-i
View(virus)
virus$VirName[grepl(i, virus$taxName, ignore.case = T)]<-i
View(virus)
colnames(virus)
# read list of target viruses
virusList<-read.table('../../virus.list', F, sep='\t')
virus.list<-virusList$V1
virusId<-function(){
# for each kraken sample file extract rows with matching viruses
df<-read.delim('krakUniq_sample.report', comment.char="#")
virus<-as.data.frame(df[grep(paste(virus.list,collapse="|"), df$taxName, ignore.case=T),])
virus$Virus<-NA
if (nrow(virus) > 0){
for ( i in virus.list){
virus$Virus[grepl(i, virus$taxName, ignore.case = T)]<-i
}
}
virusID<-data.frame(unique(virus[, c('taxID', 'Virus')]))
colnames(virusID)[1]<-'ID'
return(virusID)
}
idList<-virusId()
View(idList)
rm(list=ls())
# read list of target viruses
virusList<-read.table('../../virus.list', F, sep='\t')
virus.list<-virusList$V1
virusId<-function(){
# for each kraken sample file extract rows with matching viruses
df<-read.delim('krakUniq_sample.report', comment.char="#")
virus<-as.data.frame(df[grep(paste(virus.list,collapse="|"), df$taxName, ignore.case=T),])
virus$Virus<-NA
if (nrow(virus) > 0){
for ( i in virus.list){
virus$Virus[grepl(i, virus$taxName, ignore.case = T)]<-i
}
}
virusID<-data.frame(unique(virus[, c('taxID', 'Virus')]))
colnames(virusID)[1]<-'ID'
return(virusID)
}
idList<-virusId()
readNameTab<-read.delim('krakUniq_sample.kraken', F, sep = '\t')
View(readNameTab)
readNameSel<-readNameTab[(readNameTab$V3%in%idList$ID),]
View(readNameSel)
View(virusList)
View(idList)
View(virusList)
View(idList)
View(readNameTab)
rm(list=ls())
# read list of target viruses
virusList<-read.table('../../virus.list', F, sep='\t')
virus.list<-virusList$V1
virusId<-function(){
# for each kraken sample file extract rows with matching viruses
df<-read.delim('krakUniq_sample.report', comment.char="#")
virus<-as.data.frame(df[grep(paste(virus.list,collapse="|"), df$taxName, ignore.case=T),])
virus$Virus<-NA
if (nrow(virus) > 0){
for ( i in virus.list){
virus$Virus[grepl(i, virus$taxName, ignore.case = T)]<-i
}
}
virusID<-data.frame(unique(virus[, c('taxID', 'Virus')]))
colnames(virusID)[1]<-'krakId'
return(virusID)
}
idList<-virusId()
#write.table(idList, 'kraken.ids', row.names = F, col.names = F, quote = F)
readNameTab<-read.delim('krakUniq_sample.kraken', F, sep = '\t')
colnames(readNameTab)[3]<-'krakId'
# join
cReads<-plyr::join(idList, readNameTab, by='krakId', type='left', match='all')
View(cReads)
rm(cReads)
View(readNameTab)
selCol<-readNameTab[, c('krakId', 'Read')]
readNameTab<-read.delim('krakUniq_sample.kraken', F, sep = '\t')
colnames(readNameTab)[3]<-'krakId'
colnames(readNameTab)[2]<-'Read'
selCol<-readNameTab[, c('krakId', 'Read')]
cReads<-plyr::join(idList, readNameTab, by='krakId', type='left', match='all')
View(cReads)
View(cReads)
cReads<-plyr::join(idList, selCol, by='krakId', type='left', match='all')
View(cReads)
View(cReads)
sampleName<-read.table('sample.name')
allKrakenReads<-unique(cReads[, c('Virus', 'Read')])
sampleName<-read.table('sample.name')
sampleName<-as.character(sampleName$V1)
allKrakenReads$Sample<-sampleName
allKrakenReads<-unique(cReads[, c('Virus', 'Read')])
allKrakenReads$Sample<-sampleName
View(allKrakenReads)
reads<-allKrakenReads[, 'Read']
reads<-unique(allKrakenReads[, 'Read'])
# save sorted kraken output
write.table(allKrakenReads, 'krakenSelVirReads.tsv', row.names = F, sep = '\t', quote = F)
reads<-unique(allKrakenReads[, 'Read'])
write.table(reads, 'krakenReads.id', row.names = F, col.names = F, quote = F)
rm(list=ls())
alignPath<-paste0('./panOut/bactopia-tools/pangenome/pangenome/core-genome.aln.gz')
setwd('/home/ubuntu/extraVol/metagenClass/Dengue_virus/Batch_2')
read.table('newdir.list', F)
samples<-read.table('newdir.list', F)
file.exists('newdir.list')
samples<-samples$V1
samples
sample=samples[1]
blastIn<-paste0('./process/', sample, '/blastResTop_1.tsv')
krakIn<-paste0('./process/', sample, '/krakenSelVirReads.tsv')
blastDf<-read.delim(blastIn, T)
krakDf<-read.delim(krakIn, T)
View(krakDf)
View(blastDf)
View(blastDf)
rm(list=ls())
library(foreach)
library(doParallel)
library(readr)
useCores<-15
cores=detectCores()
vir.list<-read.delim('virus.list', F, sep='\t')
blastNames<-c('qseqid', 'sseqid', 'stitle', 'pident', 'length', 'mismatch',
'gapopen' , 'qstart' , 'qend', 'sstart' , 'send', 'evalue', 'bitscore')
topNumbers<-c(1)
filterReads<-function(df, topNumb){
x<-readr::read_delim(df, delim = "\t", escape_double = FALSE, col_names = FALSE, comment = "#", trim_ws = TRUE)
combSamp<-data.frame(matrix(nrow = 0, ncol = 0))
if (nrow(x) > 0) {
colnames(x)<-blastNames
x<-x[!is.na(x$bitscore),]
blastResFiltSyn<-as.data.frame(x[!(grepl('Synthetic', x$stitle, ignore.case=T)),])
blastResFiltCl<-as.data.frame(blastResFiltSyn[!(grepl('clone', blastResFiltSyn$stitle, ignore.case=T)),])
reads<-unique(blastResFiltCl$qseqid)
for ( read in reads){
selRead<-blastResFiltCl[(blastResFiltCl$qseqid == read),]
ordRead<-selRead[order(selRead$bitscore, decreasing = T),]
topRes<- head(ordRead, topNumb) # stopped here
topRes$Virus<-NA
for (virSamp in vir.list$V1){
topRes$Virus[grepl(virSamp, topRes$stitle, ignore.case = T)]<-virSamp
}
filtRes<-topRes[!is.na(topRes$Virus),]
combSamp<-rbind(combSamp, filtRes)
}
}
if (nrow(combSamp) > 0) {
combSampSel<-combSamp[, c('qseqid', 'Virus')]
combSampUn<-unique(combSampSel)
return(combSampUn)
} else {
print(paste0(df, '____no target viruses'))
}
}
allDir<-list.files('./process')
allDir
sampleDir<-"Col-DENV-019S_S11_L001"
sampleDirPath<-paste0('./process/', sampleDir, '/')
setwd(sampleDirPath)
cl <- makeCluster(useCores, type = "FORK")
registerDoParallel(cl)
targDir<-'./splitSeq10K/'
filesList<-list.files(targDir)
targSamples<-paste0(targDir, filesList, '/NtV4_blast.results')
sampleName<-read.table('sample.name', F)
for (topNumber in topNumbers){
blastComb<-data.frame(foreach(i=targSamples, .combine=rbind, .packages='readr') %dopar%{
filterReads(i, topNumb = topNumber)
})
if (nrow(blastComb) > 0){
blastComb$Sample<-sampleName$V1
colnames(blastComb)[1]<-'Read'
outFile<-paste0('blastResTop_', topNumber, '.tsv')
write.table(blastComb, file = outFile, col.names = T, row.names = F, quote = T, sep = '\t')
}
}
View(blastComb)
parallel::stopCluster(cl = cl)
print(paste0(sampleDirPath, '________done!'))
setwd('../../')
rm(list=ls())
samples<-read.table('newdir.list', F)
samples<-samples$V1
samples
sample<-samples[1]
blastIn<-paste0('./process/', sample, '/blastResTop_1.tsv')
krakIn<-paste0('./process/', sample, '/krakenSelVirReads.tsv')
blastDf<-read.delim(blastIn, T)
krakDf<-read.delim(krakIn, T)
blastDf$Sample_Read_Virus<-paste(blastDf$Sample, blastDf$Read, blastDf$Virus, sep = '__')
krakDf$Sample_Read_Virus<-paste(krakDf$Sample, krakDf$Read, krakDf$Virus, sep = '__')
View(blastDf)
mergedRes<-merge(blastDf, krakDf, by = 'Sample_Read_Virus')
View(mergedRes)
identical(mergedRes$Sample.x, mergedRes$Sample.y)
identical(mergedRes$Read.x, mergedRes$Read.y)
krakFilt<-krakDf[(krakDf$Sample_Read_Virus%in%blastDf$Sample_Read_Virus),]
identical(krakFilt$Sample, mergedRes$Sample.x)
filtRes<-unique(krakFilt[, c('Sample', 'Virus', 'Read')])
321/60
rm(list=ls())
samples<-read.table('newdir.list', F)
samples<-samples$V1
mergeTables<-function(sample) {
blastIn<-paste0('./process/', sample, '/blastResTop_1.tsv')
krakIn<-paste0('./process/', sample, '/krakenSelVirReads.tsv')
blastDf<-read.delim(blastIn, T)
krakDf<-read.delim(krakIn, T)
blastDf$Sample_Read_Virus<-paste(blastDf$Sample, blastDf$Read, blastDf$Virus, sep = '__')
krakDf$Sample_Read_Virus<-paste(krakDf$Sample, krakDf$Read, krakDf$Virus, sep = '__')
krakFilt<-krakDf[(krakDf$Sample_Read_Virus%in%blastDf$Sample_Read_Virus),]
filtRes<-unique(krakFilt[, c('Sample', 'Virus', 'Read')])
return(filtRes)
}
confirmedRes<-data.frame(matrix(nrow=0, ncol = 0))
for (sample in samples){
mergeSamp<-mergeTables(sample = sample)
confirmedRes<-rbind(confirmedRes, mergeSamp)
}
runSummary<-data.frame(table(confirmedRes$Sample, confirmedRes$Virus))
View(runSummary)
colnames(runSummary)[1:2]<-c('Sample', 'Virus')
View(runSummary)
rm(list=ls())
gc()
7*4
7.5*4
9.5+25
library(stringr)
curDir<-getwd()
splitDir<-str_split(curDir, pattern = '/')
View(splitDir)
splitDir[[1]]
splitDir[[-1]]
setwd('/home/ubuntu/github/emergent-metagenome-pipeline')
rm(list=ls())
fasta<-phylotools::read.fasta('./data/downsampled_ERR2984773_R1.fastq')
reticulate::repl_python()
